<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pica</groupId>
    <artifactId>bixiflink</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <modules>
        <module>flink-learning-code</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <scala.version>2.11.12</scala.version>
        <scala.version.binary>2.11</scala.version.binary>
        <flink.version>1.11.1</flink.version>
        <java.version>1.8</java.version>
        <canal.client.version>1.1.4</canal.client.version>
        <flink_kafka_connector_version>flink-connector-kafka-0.10_2.11</flink_kafka_connector_version>
        <hudi.version>0.6.0</hudi.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.7</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>compile</scope>
        </dependency>

        <!--mysql JDBC-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.13</version>
            <scope>compile</scope>
        </dependency>

        <!-- flink的hadoop兼容 -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-hadoop-compatibility_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- flink的scala的api -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-scala_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- flink streaming的scala的api -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>


        <!-- flink的java的api -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-java</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- flink streaming的java的api -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- flink 的kafkaconnector -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka-0.10_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>


        <!-- 使用rocksdb保存flink的state -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-statebackend-rocksdb_2.11</artifactId>
            <version>${flink.version}</version>
        </dependency>


        <!-- flink运行时的webUI -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime-web_2.11</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- 辅助类增加get set toString等方法，需要idea安装lombok插件 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.0</version>
            <scope>compile</scope>
        </dependency>

        <!--canal框架,解析binlog-->
        <dependency>
            <groupId>com.alibaba.otter</groupId>
            <artifactId>canal.client</artifactId>
            <version>${canal.client.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>fastjson</artifactId>
                    <groupId>com.alibaba</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-cli</artifactId>
                    <groupId>commons-cli</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-lang3</artifactId>
                    <groupId>org.apache.commons</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>zookeeper</artifactId>
                    <groupId>org.apache.zookeeper</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--解析json-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.51</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <!--子模块需要手动引入,但是不需要加version-->
        <dependencies>
            <dependency>
                <groupId>org.apache.hudi</groupId>
                <artifactId>hudi-spark-bundle_2.11</artifactId>
                <version>${hudi.version}</version>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>





    <!--这时候在本地IDA运行Job时,它会给你引入 flink-java、flink-streaming-java,且 scope 设置为 compile,但是你是打成 Jar 包的时候它又不起作用。-->
<!--    <profiles>-->
<!--        <profile>-->
<!--            <id>add-dependencies-for-IDEA</id>-->
<!--            <activation>-->
<!--                <property>-->
<!--                    <name>idea.version</name>-->
<!--                </property>-->
<!--            </activation>-->

<!--            <dependencies>-->
<!--                <dependency>-->
<!--                    <groupId>org.apache.flink</groupId>-->
<!--                    <artifactId>flink-scala_2.11</artifactId>-->
<!--                    <version>${flink.version}</version>-->
<!--                    <scope>compile</scope>-->
<!--                </dependency>-->
<!--                <dependency>-->
<!--                    <groupId>org.apache.flink</groupId>-->
<!--                    <artifactId>flink-streaming-scala_2.11</artifactId>-->
<!--                    <version>${flink.version}</version>-->
<!--                    <scope>compile</scope>-->
<!--                </dependency>-->
<!--                <dependency>-->
<!--                    <groupId>org.apache.flink</groupId>-->
<!--                    <artifactId>flink-java</artifactId>-->
<!--                    <version>${flink.version}</version>-->
<!--                    <scope>compile</scope>-->
<!--                </dependency>-->
<!--                <dependency>-->
<!--                    <groupId>org.apache.flink</groupId>-->
<!--                    <artifactId>flink-streaming-java_2.11</artifactId>-->
<!--                    <version>${flink.version}</version>-->
<!--                    <scope>compile</scope>-->
<!--                </dependency>-->
<!--            </dependencies>-->
<!--        </profile>-->
<!--    </profiles>-->

</project>